syntax = "proto3";
package hyperlane.core.v1;

option go_package = "github.com/troykessler/hyperlane-cosmos/x/core/types";

import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";

// Msg defines the module Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // CreateMailbox ...
  rpc CreateMailbox(MsgCreateMailbox) returns (MsgCreateMailboxResponse);

  // SetMailbox ...
  rpc SetMailbox(MsgSetMailbox) returns (MsgSetMailboxResponse);

  // ProcessMessage ...
  rpc ProcessMessage(MsgProcessMessage) returns (MsgProcessMessageResponse);
}

// MsgCreateMailbox ...
message MsgCreateMailbox {
  option (cosmos.msg.v1.signer) = "owner";
  option (amino.name) = "hyperlane/v1/MsgCreateMailbox";

  // owner is the message sender.
  string owner = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // local domain
  uint32 local_domain = 2;

  string default_ism = 3 [
    (gogoproto.customtype) =
        "github.com/troykessler/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = false
  ];

  // default_hook ...
  string default_hook = 4 [
    (gogoproto.customtype) =
        "github.com/troykessler/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = true
  ];

  // required_hook ...
  string required_hook = 5 [
    (gogoproto.customtype) =
        "github.com/troykessler/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = true
  ];
}

// MsgCreateMailboxResponse ...
message MsgCreateMailboxResponse { string id = 1; }

// MsgSetMailbox ...
message MsgSetMailbox {
  option (cosmos.msg.v1.signer) = "owner";
  option (amino.name) = "hyperlane/v1/MsgSetMailbox";

  // owner is the message sender.
  string owner = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // mailbox_id
  string mailbox_id = 2 [
    (gogoproto.customtype) =
        "github.com/troykessler/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = false
  ];
  // default_ism ...
  string default_ism = 3 [
    (gogoproto.customtype) =
        "github.com/troykessler/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = true
  ];
  // default_hook ...
  string default_hook = 4 [
    (gogoproto.customtype) =
        "github.com/troykessler/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = true
  ];
  // required_hook ...
  string required_hook = 5 [
    (gogoproto.customtype) =
        "github.com/troykessler/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = true
  ];
  // new_owner ...
  string new_owner = 6;
}

// MsgSetMailboxResponse ...
message MsgSetMailboxResponse {}

// MsgProcessMessage ...
message MsgProcessMessage {
  option (cosmos.msg.v1.signer) = "relayer";
  option (amino.name) = "hyperlane/v1/MsgProcessMessage";

  // mailbox_id ...
  string mailbox_id = 1 [
    (gogoproto.customtype) =
        "github.com/troykessler/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = false
  ];
  // relayer ...
  string relayer = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // metadata ...
  string metadata = 3;

  // message ...
  string message = 4;
}

// MsgProcessMessageResponse ...
message MsgProcessMessageResponse {}
