// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: hyperlane/core/interchain_security/v1/query.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	query "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QueryIsmsRequest ...
type QueryIsmsRequest struct {
	// pagination defines an optional pagination for the request.
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryIsmsRequest) Reset()         { *m = QueryIsmsRequest{} }
func (m *QueryIsmsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryIsmsRequest) ProtoMessage()    {}
func (*QueryIsmsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5cff9b810eaec0b, []int{0}
}
func (m *QueryIsmsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryIsmsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryIsmsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryIsmsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryIsmsRequest.Merge(m, src)
}
func (m *QueryIsmsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryIsmsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryIsmsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryIsmsRequest proto.InternalMessageInfo

func (m *QueryIsmsRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryIsmsResponse ...
type QueryIsmsResponse struct {
	Isms []*types.Any `protobuf:"bytes,1,rep,name=isms,proto3" json:"isms,omitempty"`
	// pagination defines the pagination in the response.
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryIsmsResponse) Reset()         { *m = QueryIsmsResponse{} }
func (m *QueryIsmsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryIsmsResponse) ProtoMessage()    {}
func (*QueryIsmsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5cff9b810eaec0b, []int{1}
}
func (m *QueryIsmsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryIsmsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryIsmsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryIsmsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryIsmsResponse.Merge(m, src)
}
func (m *QueryIsmsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryIsmsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryIsmsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryIsmsResponse proto.InternalMessageInfo

func (m *QueryIsmsResponse) GetIsms() []*types.Any {
	if m != nil {
		return m.Isms
	}
	return nil
}

func (m *QueryIsmsResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryIsmRequest ...
type QueryIsmRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *QueryIsmRequest) Reset()         { *m = QueryIsmRequest{} }
func (m *QueryIsmRequest) String() string { return proto.CompactTextString(m) }
func (*QueryIsmRequest) ProtoMessage()    {}
func (*QueryIsmRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5cff9b810eaec0b, []int{2}
}
func (m *QueryIsmRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryIsmRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryIsmRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryIsmRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryIsmRequest.Merge(m, src)
}
func (m *QueryIsmRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryIsmRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryIsmRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryIsmRequest proto.InternalMessageInfo

func (m *QueryIsmRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// QueryIsmResponse ...
type QueryIsmResponse struct {
	Ism types.Any `protobuf:"bytes,1,opt,name=ism,proto3" json:"ism"`
}

func (m *QueryIsmResponse) Reset()         { *m = QueryIsmResponse{} }
func (m *QueryIsmResponse) String() string { return proto.CompactTextString(m) }
func (*QueryIsmResponse) ProtoMessage()    {}
func (*QueryIsmResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5cff9b810eaec0b, []int{3}
}
func (m *QueryIsmResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryIsmResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryIsmResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryIsmResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryIsmResponse.Merge(m, src)
}
func (m *QueryIsmResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryIsmResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryIsmResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryIsmResponse proto.InternalMessageInfo

func (m *QueryIsmResponse) GetIsm() types.Any {
	if m != nil {
		return m.Ism
	}
	return types.Any{}
}

// QueryAnnouncedStorageLocationsRequest ...
type QueryAnnouncedStorageLocationsRequest struct {
	MailboxId        string `protobuf:"bytes,1,opt,name=mailbox_id,json=mailboxId,proto3" json:"mailbox_id,omitempty"`
	ValidatorAddress string `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
}

func (m *QueryAnnouncedStorageLocationsRequest) Reset()         { *m = QueryAnnouncedStorageLocationsRequest{} }
func (m *QueryAnnouncedStorageLocationsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAnnouncedStorageLocationsRequest) ProtoMessage()    {}
func (*QueryAnnouncedStorageLocationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5cff9b810eaec0b, []int{4}
}
func (m *QueryAnnouncedStorageLocationsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAnnouncedStorageLocationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAnnouncedStorageLocationsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAnnouncedStorageLocationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAnnouncedStorageLocationsRequest.Merge(m, src)
}
func (m *QueryAnnouncedStorageLocationsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAnnouncedStorageLocationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAnnouncedStorageLocationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAnnouncedStorageLocationsRequest proto.InternalMessageInfo

func (m *QueryAnnouncedStorageLocationsRequest) GetMailboxId() string {
	if m != nil {
		return m.MailboxId
	}
	return ""
}

func (m *QueryAnnouncedStorageLocationsRequest) GetValidatorAddress() string {
	if m != nil {
		return m.ValidatorAddress
	}
	return ""
}

// QueryAnnouncedStorageLocationsResponse ...
type QueryAnnouncedStorageLocationsResponse struct {
	StorageLocations []string `protobuf:"bytes,1,rep,name=storage_locations,json=storageLocations,proto3" json:"storage_locations,omitempty"`
}

func (m *QueryAnnouncedStorageLocationsResponse) Reset() {
	*m = QueryAnnouncedStorageLocationsResponse{}
}
func (m *QueryAnnouncedStorageLocationsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAnnouncedStorageLocationsResponse) ProtoMessage()    {}
func (*QueryAnnouncedStorageLocationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5cff9b810eaec0b, []int{5}
}
func (m *QueryAnnouncedStorageLocationsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAnnouncedStorageLocationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAnnouncedStorageLocationsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAnnouncedStorageLocationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAnnouncedStorageLocationsResponse.Merge(m, src)
}
func (m *QueryAnnouncedStorageLocationsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAnnouncedStorageLocationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAnnouncedStorageLocationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAnnouncedStorageLocationsResponse proto.InternalMessageInfo

func (m *QueryAnnouncedStorageLocationsResponse) GetStorageLocations() []string {
	if m != nil {
		return m.StorageLocations
	}
	return nil
}

// QueryAnnouncedStorageLocationsRequest ...
type QueryLatestAnnouncedStorageLocationRequest struct {
	MailboxId        string `protobuf:"bytes,1,opt,name=mailbox_id,json=mailboxId,proto3" json:"mailbox_id,omitempty"`
	ValidatorAddress string `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
}

func (m *QueryLatestAnnouncedStorageLocationRequest) Reset() {
	*m = QueryLatestAnnouncedStorageLocationRequest{}
}
func (m *QueryLatestAnnouncedStorageLocationRequest) String() string {
	return proto.CompactTextString(m)
}
func (*QueryLatestAnnouncedStorageLocationRequest) ProtoMessage() {}
func (*QueryLatestAnnouncedStorageLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5cff9b810eaec0b, []int{6}
}
func (m *QueryLatestAnnouncedStorageLocationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryLatestAnnouncedStorageLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryLatestAnnouncedStorageLocationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryLatestAnnouncedStorageLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryLatestAnnouncedStorageLocationRequest.Merge(m, src)
}
func (m *QueryLatestAnnouncedStorageLocationRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryLatestAnnouncedStorageLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryLatestAnnouncedStorageLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryLatestAnnouncedStorageLocationRequest proto.InternalMessageInfo

func (m *QueryLatestAnnouncedStorageLocationRequest) GetMailboxId() string {
	if m != nil {
		return m.MailboxId
	}
	return ""
}

func (m *QueryLatestAnnouncedStorageLocationRequest) GetValidatorAddress() string {
	if m != nil {
		return m.ValidatorAddress
	}
	return ""
}

// QueryAnnouncedStorageLocationsResponse ...
type QueryLatestAnnouncedStorageLocationResponse struct {
	StorageLocation string `protobuf:"bytes,1,opt,name=storage_location,json=storageLocation,proto3" json:"storage_location,omitempty"`
}

func (m *QueryLatestAnnouncedStorageLocationResponse) Reset() {
	*m = QueryLatestAnnouncedStorageLocationResponse{}
}
func (m *QueryLatestAnnouncedStorageLocationResponse) String() string {
	return proto.CompactTextString(m)
}
func (*QueryLatestAnnouncedStorageLocationResponse) ProtoMessage() {}
func (*QueryLatestAnnouncedStorageLocationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5cff9b810eaec0b, []int{7}
}
func (m *QueryLatestAnnouncedStorageLocationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryLatestAnnouncedStorageLocationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryLatestAnnouncedStorageLocationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryLatestAnnouncedStorageLocationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryLatestAnnouncedStorageLocationResponse.Merge(m, src)
}
func (m *QueryLatestAnnouncedStorageLocationResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryLatestAnnouncedStorageLocationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryLatestAnnouncedStorageLocationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryLatestAnnouncedStorageLocationResponse proto.InternalMessageInfo

func (m *QueryLatestAnnouncedStorageLocationResponse) GetStorageLocation() string {
	if m != nil {
		return m.StorageLocation
	}
	return ""
}

func init() {
	proto.RegisterType((*QueryIsmsRequest)(nil), "hyperlane.core.interchain_security.v1.QueryIsmsRequest")
	proto.RegisterType((*QueryIsmsResponse)(nil), "hyperlane.core.interchain_security.v1.QueryIsmsResponse")
	proto.RegisterType((*QueryIsmRequest)(nil), "hyperlane.core.interchain_security.v1.QueryIsmRequest")
	proto.RegisterType((*QueryIsmResponse)(nil), "hyperlane.core.interchain_security.v1.QueryIsmResponse")
	proto.RegisterType((*QueryAnnouncedStorageLocationsRequest)(nil), "hyperlane.core.interchain_security.v1.QueryAnnouncedStorageLocationsRequest")
	proto.RegisterType((*QueryAnnouncedStorageLocationsResponse)(nil), "hyperlane.core.interchain_security.v1.QueryAnnouncedStorageLocationsResponse")
	proto.RegisterType((*QueryLatestAnnouncedStorageLocationRequest)(nil), "hyperlane.core.interchain_security.v1.QueryLatestAnnouncedStorageLocationRequest")
	proto.RegisterType((*QueryLatestAnnouncedStorageLocationResponse)(nil), "hyperlane.core.interchain_security.v1.QueryLatestAnnouncedStorageLocationResponse")
}

func init() {
	proto.RegisterFile("hyperlane/core/interchain_security/v1/query.proto", fileDescriptor_d5cff9b810eaec0b)
}

var fileDescriptor_d5cff9b810eaec0b = []byte{
	// 745 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdf, 0x4e, 0x13, 0x4d,
	0x1c, 0xed, 0x16, 0xbe, 0xef, 0x4b, 0x87, 0xe4, 0xa3, 0x9d, 0x90, 0x08, 0x8d, 0x16, 0x6c, 0x02,
	0x22, 0x84, 0x19, 0x17, 0x13, 0xf1, 0x16, 0x12, 0xff, 0x34, 0x42, 0x22, 0x8b, 0x18, 0x83, 0x9a,
	0xcd, 0x74, 0x77, 0x5c, 0x26, 0xee, 0xee, 0x94, 0x9d, 0x6d, 0xc3, 0x86, 0x10, 0xa3, 0x4f, 0x60,
	0x62, 0xd4, 0x57, 0xf0, 0xc2, 0x0b, 0x2f, 0x7c, 0x08, 0xe2, 0x15, 0x89, 0x37, 0xde, 0x68, 0x0c,
	0x98, 0xf8, 0x1a, 0xa6, 0x33, 0xb3, 0x2d, 0x94, 0x22, 0x34, 0x81, 0x1b, 0xb2, 0x3b, 0xbf, 0x39,
	0xe7, 0x77, 0xce, 0xe1, 0x37, 0xb3, 0x05, 0xe6, 0x7a, 0x52, 0xa3, 0x91, 0x4f, 0x42, 0x8a, 0x1d,
	0x1e, 0x51, 0xcc, 0xc2, 0x98, 0x46, 0xce, 0x3a, 0x61, 0xa1, 0x2d, 0xa8, 0x53, 0x8f, 0x58, 0x9c,
	0xe0, 0x86, 0x89, 0x37, 0xea, 0x34, 0x4a, 0x50, 0x2d, 0xe2, 0x31, 0x87, 0xe3, 0x2d, 0x08, 0x6a,
	0x42, 0x50, 0x17, 0x08, 0x6a, 0x98, 0xc5, 0x29, 0x87, 0x8b, 0x80, 0x0b, 0x5c, 0x25, 0x82, 0x2a,
	0x3c, 0x6e, 0x98, 0x55, 0x1a, 0x13, 0x13, 0xd7, 0x88, 0xc7, 0x42, 0x12, 0x33, 0x1e, 0x2a, 0xca,
	0xe2, 0x45, 0x8f, 0x73, 0xcf, 0xa7, 0x98, 0xd4, 0x18, 0x26, 0x61, 0xc8, 0x63, 0x59, 0x14, 0xba,
	0x5a, 0x20, 0x01, 0x0b, 0x39, 0x96, 0x7f, 0xf5, 0xd2, 0x90, 0xc7, 0x3d, 0x2e, 0x1f, 0x71, 0xf3,
	0x49, 0xaf, 0x8e, 0x68, 0x1a, 0xf9, 0x56, 0xad, 0x3f, 0xc3, 0x24, 0x4c, 0xd2, 0x92, 0x52, 0x63,
	0x2b, 0x8c, 0x7a, 0x51, 0xa5, 0xf2, 0x1a, 0xc8, 0x2f, 0x37, 0xe5, 0x55, 0x44, 0x20, 0x2c, 0xba,
	0x51, 0xa7, 0x22, 0x86, 0xb7, 0x01, 0x68, 0x8b, 0x1c, 0x36, 0xc6, 0x8c, 0xc9, 0x81, 0xd9, 0x09,
	0xa4, 0x61, 0x4d, 0x47, 0x48, 0x25, 0xa2, 0x1d, 0xa1, 0xfb, 0xc4, 0xa3, 0x1a, 0x6b, 0x1d, 0x40,
	0x96, 0xbf, 0x1b, 0xa0, 0x70, 0x80, 0x5c, 0xd4, 0x78, 0x28, 0x28, 0x7c, 0x01, 0xfa, 0x99, 0x08,
	0xc4, 0xb0, 0x31, 0xd6, 0x37, 0x39, 0x30, 0x3b, 0x84, 0x94, 0x6c, 0x94, 0xca, 0x46, 0xf3, 0x61,
	0xb2, 0xb0, 0xfa, 0xe5, 0xf3, 0xcc, 0x72, 0x47, 0xd2, 0x0d, 0x13, 0x5d, 0x33, 0xed, 0x2e, 0x79,
	0xdb, 0x01, 0x77, 0xeb, 0x3e, 0x45, 0x77, 0xd3, 0xfd, 0x95, 0xd6, 0x9e, 0x15, 0xbd, 0x65, 0x49,
	0xee, 0xb0, 0x64, 0x63, 0x78, 0xe7, 0x90, 0xbd, 0xac, 0xb4, 0x77, 0xe5, 0x44, 0x7b, 0x4a, 0xfd,
	0x21, 0x7f, 0x97, 0xc1, 0x60, 0x6a, 0x2f, 0x8d, 0xee, 0x7f, 0x90, 0x65, 0xae, 0x8c, 0x2c, 0x67,
	0x65, 0x99, 0x5b, 0xbe, 0xd5, 0x8e, 0xb7, 0x15, 0x80, 0x09, 0xfa, 0x98, 0x08, 0x74, 0xae, 0xdd,
	0xfd, 0xe7, 0x76, 0x7e, 0x8c, 0x66, 0x3e, 0xfc, 0xfe, 0x34, 0x65, 0x58, 0xcd, 0xbd, 0x65, 0x01,
	0xc6, 0x25, 0xcd, 0x7c, 0x18, 0xf2, 0x7a, 0xe8, 0x50, 0x77, 0x25, 0xe6, 0x11, 0xf1, 0xe8, 0x22,
	0x77, 0xd4, 0xb0, 0xa4, 0xfd, 0x2f, 0x01, 0x10, 0x10, 0xe6, 0x57, 0xf9, 0xa6, 0xdd, 0xd2, 0x91,
	0xd3, 0x2b, 0x15, 0x17, 0x4e, 0x83, 0x42, 0x83, 0xf8, 0xcc, 0x25, 0x31, 0x8f, 0x6c, 0xe2, 0xba,
	0x11, 0x15, 0x42, 0x26, 0x90, 0xb3, 0xf2, 0xad, 0xc2, 0xbc, 0x5a, 0x2f, 0xaf, 0x82, 0x89, 0x93,
	0x9a, 0x6a, 0x47, 0xd3, 0xa0, 0x20, 0x54, 0xcd, 0xf6, 0xd3, 0xa2, 0xfc, 0xff, 0xe6, 0xac, 0xbc,
	0xe8, 0x00, 0x95, 0x37, 0xc1, 0x94, 0xa4, 0x5d, 0x24, 0x31, 0x15, 0xf1, 0x71, 0xe4, 0xe7, 0x61,
	0xe8, 0x11, 0x98, 0x3e, 0x55, 0x67, 0xed, 0xea, 0x2a, 0xc8, 0x77, 0xba, 0xd2, 0x02, 0x06, 0x3b,
	0x4c, 0xcd, 0xbe, 0xfc, 0x0f, 0xfc, 0x23, 0xa9, 0xe1, 0x5b, 0x03, 0xf4, 0x37, 0xc7, 0x1d, 0xce,
	0xa1, 0x53, 0xdd, 0x14, 0xa8, 0xf3, 0xf4, 0x15, 0x6f, 0xf6, 0x0e, 0x54, 0x82, 0xcb, 0xc5, 0x57,
	0x5f, 0x7f, 0xbd, 0xc9, 0x0e, 0x41, 0x88, 0xdb, 0xf7, 0x5a, 0xc3, 0xc4, 0x72, 0xe8, 0xdf, 0x1b,
	0xa0, 0xaf, 0x22, 0x02, 0x78, 0xa3, 0x47, 0xf6, 0x54, 0xd5, 0x5c, 0xcf, 0x38, 0x2d, 0x6a, 0x54,
	0x8a, 0x1a, 0x81, 0x17, 0x8e, 0x8a, 0xc2, 0x5b, 0xcc, 0xdd, 0x86, 0xef, 0xb2, 0x60, 0xe4, 0xd8,
	0x11, 0x83, 0x8b, 0xbd, 0xf4, 0x3d, 0xe9, 0x78, 0x14, 0x97, 0xce, 0x88, 0x4d, 0x7b, 0x7b, 0x22,
	0xbd, 0x3d, 0x84, 0x0f, 0x0e, 0x7b, 0xd3, 0xe3, 0x49, 0x05, 0xde, 0x6a, 0xcf, 0xee, 0xb6, 0xbc,
	0xdb, 0x25, 0x9f, 0x7d, 0xe4, 0xb0, 0xe0, 0xad, 0x23, 0x53, 0xbc, 0x0d, 0x3f, 0x66, 0x41, 0xe9,
	0xef, 0xa3, 0x0a, 0x97, 0x7b, 0xf1, 0x73, 0xaa, 0x03, 0x57, 0xb4, 0xce, 0x92, 0x52, 0xe7, 0xe4,
	0xc8, 0x9c, 0x9e, 0xc2, 0xc7, 0xe7, 0x91, 0x13, 0xf6, 0xa5, 0x88, 0x05, 0xba, 0xb3, 0x57, 0x32,
	0x76, 0xf7, 0x4a, 0xc6, 0xcf, 0xbd, 0x92, 0xf1, 0x7a, 0xbf, 0x94, 0xd9, 0xdd, 0x2f, 0x65, 0xbe,
	0xed, 0x97, 0x32, 0x6b, 0xf7, 0x3c, 0x16, 0xaf, 0xd7, 0xab, 0xc8, 0xe1, 0x01, 0x8e, 0x23, 0x9e,
	0x3c, 0xa7, 0x42, 0xf8, 0x34, 0x6a, 0x8b, 0x99, 0xd1, 0x5f, 0xeb, 0x4d, 0xf5, 0x33, 0xa0, 0xfb,
	0x67, 0x06, 0xc7, 0x49, 0x8d, 0x8a, 0xea, 0xbf, 0xf2, 0xa2, 0xbe, 0xfe, 0x27, 0x00, 0x00, 0xff,
	0xff, 0x39, 0x8b, 0xaa, 0x72, 0x3c, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Isms ...
	Isms(ctx context.Context, in *QueryIsmsRequest, opts ...grpc.CallOption) (*QueryIsmsResponse, error)
	// Ism ...
	Ism(ctx context.Context, in *QueryIsmRequest, opts ...grpc.CallOption) (*QueryIsmResponse, error)
	// AnnouncedStorageLocations ...
	AnnouncedStorageLocations(ctx context.Context, in *QueryAnnouncedStorageLocationsRequest, opts ...grpc.CallOption) (*QueryAnnouncedStorageLocationsResponse, error)
	// LatestAnnouncedStorageLocation ...
	LatestAnnouncedStorageLocation(ctx context.Context, in *QueryLatestAnnouncedStorageLocationRequest, opts ...grpc.CallOption) (*QueryLatestAnnouncedStorageLocationResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Isms(ctx context.Context, in *QueryIsmsRequest, opts ...grpc.CallOption) (*QueryIsmsResponse, error) {
	out := new(QueryIsmsResponse)
	err := c.cc.Invoke(ctx, "/hyperlane.core.interchain_security.v1.Query/Isms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Ism(ctx context.Context, in *QueryIsmRequest, opts ...grpc.CallOption) (*QueryIsmResponse, error) {
	out := new(QueryIsmResponse)
	err := c.cc.Invoke(ctx, "/hyperlane.core.interchain_security.v1.Query/Ism", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) AnnouncedStorageLocations(ctx context.Context, in *QueryAnnouncedStorageLocationsRequest, opts ...grpc.CallOption) (*QueryAnnouncedStorageLocationsResponse, error) {
	out := new(QueryAnnouncedStorageLocationsResponse)
	err := c.cc.Invoke(ctx, "/hyperlane.core.interchain_security.v1.Query/AnnouncedStorageLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) LatestAnnouncedStorageLocation(ctx context.Context, in *QueryLatestAnnouncedStorageLocationRequest, opts ...grpc.CallOption) (*QueryLatestAnnouncedStorageLocationResponse, error) {
	out := new(QueryLatestAnnouncedStorageLocationResponse)
	err := c.cc.Invoke(ctx, "/hyperlane.core.interchain_security.v1.Query/LatestAnnouncedStorageLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Isms ...
	Isms(context.Context, *QueryIsmsRequest) (*QueryIsmsResponse, error)
	// Ism ...
	Ism(context.Context, *QueryIsmRequest) (*QueryIsmResponse, error)
	// AnnouncedStorageLocations ...
	AnnouncedStorageLocations(context.Context, *QueryAnnouncedStorageLocationsRequest) (*QueryAnnouncedStorageLocationsResponse, error)
	// LatestAnnouncedStorageLocation ...
	LatestAnnouncedStorageLocation(context.Context, *QueryLatestAnnouncedStorageLocationRequest) (*QueryLatestAnnouncedStorageLocationResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Isms(ctx context.Context, req *QueryIsmsRequest) (*QueryIsmsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Isms not implemented")
}
func (*UnimplementedQueryServer) Ism(ctx context.Context, req *QueryIsmRequest) (*QueryIsmResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ism not implemented")
}
func (*UnimplementedQueryServer) AnnouncedStorageLocations(ctx context.Context, req *QueryAnnouncedStorageLocationsRequest) (*QueryAnnouncedStorageLocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnnouncedStorageLocations not implemented")
}
func (*UnimplementedQueryServer) LatestAnnouncedStorageLocation(ctx context.Context, req *QueryLatestAnnouncedStorageLocationRequest) (*QueryLatestAnnouncedStorageLocationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LatestAnnouncedStorageLocation not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Isms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryIsmsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Isms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hyperlane.core.interchain_security.v1.Query/Isms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Isms(ctx, req.(*QueryIsmsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Ism_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryIsmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Ism(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hyperlane.core.interchain_security.v1.Query/Ism",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Ism(ctx, req.(*QueryIsmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_AnnouncedStorageLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAnnouncedStorageLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).AnnouncedStorageLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hyperlane.core.interchain_security.v1.Query/AnnouncedStorageLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).AnnouncedStorageLocations(ctx, req.(*QueryAnnouncedStorageLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_LatestAnnouncedStorageLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryLatestAnnouncedStorageLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).LatestAnnouncedStorageLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hyperlane.core.interchain_security.v1.Query/LatestAnnouncedStorageLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).LatestAnnouncedStorageLocation(ctx, req.(*QueryLatestAnnouncedStorageLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var Query_serviceDesc = _Query_serviceDesc
var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hyperlane.core.interchain_security.v1.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Isms",
			Handler:    _Query_Isms_Handler,
		},
		{
			MethodName: "Ism",
			Handler:    _Query_Ism_Handler,
		},
		{
			MethodName: "AnnouncedStorageLocations",
			Handler:    _Query_AnnouncedStorageLocations_Handler,
		},
		{
			MethodName: "LatestAnnouncedStorageLocation",
			Handler:    _Query_LatestAnnouncedStorageLocation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hyperlane/core/interchain_security/v1/query.proto",
}

func (m *QueryIsmsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryIsmsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryIsmsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryIsmsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryIsmsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryIsmsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Isms) > 0 {
		for iNdEx := len(m.Isms) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Isms[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryIsmRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryIsmRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryIsmRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryIsmResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryIsmResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryIsmResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Ism.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryAnnouncedStorageLocationsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAnnouncedStorageLocationsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAnnouncedStorageLocationsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ValidatorAddress) > 0 {
		i -= len(m.ValidatorAddress)
		copy(dAtA[i:], m.ValidatorAddress)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.ValidatorAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MailboxId) > 0 {
		i -= len(m.MailboxId)
		copy(dAtA[i:], m.MailboxId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MailboxId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAnnouncedStorageLocationsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAnnouncedStorageLocationsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAnnouncedStorageLocationsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StorageLocations) > 0 {
		for iNdEx := len(m.StorageLocations) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.StorageLocations[iNdEx])
			copy(dAtA[i:], m.StorageLocations[iNdEx])
			i = encodeVarintQuery(dAtA, i, uint64(len(m.StorageLocations[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryLatestAnnouncedStorageLocationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryLatestAnnouncedStorageLocationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryLatestAnnouncedStorageLocationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ValidatorAddress) > 0 {
		i -= len(m.ValidatorAddress)
		copy(dAtA[i:], m.ValidatorAddress)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.ValidatorAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MailboxId) > 0 {
		i -= len(m.MailboxId)
		copy(dAtA[i:], m.MailboxId)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.MailboxId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryLatestAnnouncedStorageLocationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryLatestAnnouncedStorageLocationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryLatestAnnouncedStorageLocationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StorageLocation) > 0 {
		i -= len(m.StorageLocation)
		copy(dAtA[i:], m.StorageLocation)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.StorageLocation)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryIsmsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryIsmsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Isms) > 0 {
		for _, e := range m.Isms {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryIsmRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryIsmResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Ism.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryAnnouncedStorageLocationsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MailboxId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.ValidatorAddress)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAnnouncedStorageLocationsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.StorageLocations) > 0 {
		for _, s := range m.StorageLocations {
			l = len(s)
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	return n
}

func (m *QueryLatestAnnouncedStorageLocationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MailboxId)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.ValidatorAddress)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryLatestAnnouncedStorageLocationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.StorageLocation)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryIsmsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryIsmsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryIsmsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryIsmsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryIsmsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryIsmsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Isms", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Isms = append(m.Isms, &types.Any{})
			if err := m.Isms[len(m.Isms)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryIsmRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryIsmRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryIsmRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryIsmResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryIsmResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryIsmResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ism", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Ism.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAnnouncedStorageLocationsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAnnouncedStorageLocationsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAnnouncedStorageLocationsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MailboxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MailboxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValidatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAnnouncedStorageLocationsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAnnouncedStorageLocationsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAnnouncedStorageLocationsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorageLocations", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StorageLocations = append(m.StorageLocations, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryLatestAnnouncedStorageLocationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryLatestAnnouncedStorageLocationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryLatestAnnouncedStorageLocationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MailboxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MailboxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValidatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryLatestAnnouncedStorageLocationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryLatestAnnouncedStorageLocationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryLatestAnnouncedStorageLocationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorageLocation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StorageLocation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
